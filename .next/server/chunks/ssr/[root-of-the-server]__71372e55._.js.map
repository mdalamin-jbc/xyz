{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/md-alamin-haque/xyz/own/project-xyz-beta-main/src/schemas/invoice.ts"],"sourcesContent":["import { z } from \"zod\";\n\nexport const invoiceSchema = z.object({\n  issueDate: z.string().min(1, \"発行日は必須です\"),\n  billToName: z\n    .string()\n    .min(1, \"請求先名は必須です\")\n    .min(2, \"請求先名は2文字以上で入力してください\"),\n  productName: z\n    .string()\n    .min(1, \"品名は必須です\")\n    .min(2, \"品名は2文字以上で入力してください\"),\n});\n\nexport type InvoiceFormData = z.infer<typeof invoiceSchema>;\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,MAAM,gBAAgB,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,WAAW,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,YAAY,iLAAA,CAAA,IAAC,CACV,MAAM,GACN,GAAG,CAAC,GAAG,aACP,GAAG,CAAC,GAAG;IACV,aAAa,iLAAA,CAAA,IAAC,CACX,MAAM,GACN,GAAG,CAAC,GAAG,WACP,GAAG,CAAC,GAAG;AACZ","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/md-alamin-haque/xyz/own/project-xyz-beta-main/src/utils/function/cn.ts"],"sourcesContent":["// utils/cn.ts\nimport { ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\n/**\n * A utility function to merge Tailwind CSS classes with conditional logic.\n * Combines `clsx` for conditional classNames and `tailwind-merge` for conflict resolution.\n *\n * @param inputs - Accepts any number of class names, conditionally applied.\n * @returns A merged class string ready for use in JSX `className` attributes.\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(...inputs));\n}\n"],"names":[],"mappings":"AAAA,cAAc;;;;AACd;AACA;;;AASO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,KAAK;AACzB","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///home/md-alamin-haque/xyz/own/project-xyz-beta-main/src/hooks/admin/useLogout.tsx"],"sourcesContent":["\"use client\";\n\nimport { deleteCookie } from \"cookies-next\";\nimport { useRouter } from \"next/navigation\";\n\nexport const useLogout = () => {\n  const router = useRouter();\n\n  const logout = () => {\n    // Clear localStorage\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"role\");\n\n    // Clear cookies\n    deleteCookie(\"accessToken\");\n    deleteCookie(\"refreshToken\");\n    deleteCookie(\"role\");\n\n    // Redirect to login\n    router.push(\"/login\");\n  };\n\n  return logout;\n};\n"],"names":[],"mappings":";;;AAEA;AACA;AAHA;;;AAKO,MAAM,YAAY;IACvB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,SAAS;QACb,qBAAqB;QACrB,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QAExB,gBAAgB;QAChB,CAAA,GAAA,+IAAA,CAAA,eAAY,AAAD,EAAE;QACb,CAAA,GAAA,+IAAA,CAAA,eAAY,AAAD,EAAE;QACb,CAAA,GAAA,+IAAA,CAAA,eAAY,AAAD,EAAE;QAEb,oBAAoB;QACpB,OAAO,IAAI,CAAC;IACd;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///home/md-alamin-haque/xyz/own/project-xyz-beta-main/src/components/ui/Button.tsx"],"sourcesContent":["import React, { ButtonHTMLAttributes, forwardRef } from \"react\";\n\n// Utility function for className merging (replace with your own implementation)\nconst cn = (...classes: (string | undefined | null | boolean)[]): string => {\n  return classes.filter(Boolean).join(\" \");\n};\n\n// Define variant types\nexport type ButtonVariant =\n  | \"primary\"\n  | \"glassSec\"\n  | \"glass\"\n  | \"glassBrand\"\n  | \"outline\"\n  | \"ghost\"\n  | \"dark\";\n\nexport type ButtonSize = \"sm\" | \"default\" | \"md\" | \"lg\" | \"xl\" | \"icon\";\n\nexport type ButtonGlass = \"none\" | \"light\" | \"medium\" | \"heavy\";\n\n// Props interface extending HTML button attributes\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  /** Button content */\n  children: React.ReactNode;\n  /** Button variant style */\n  variant?: ButtonVariant;\n  /** Button size */\n  size?: ButtonSize;\n  /** Glass effect intensity */\n  glass?: ButtonGlass;\n  /** Loading state */\n  loading?: boolean;\n  /** Icon to display before text */\n  leftIcon?: React.ReactNode;\n  /** Icon to display after text */\n  rightIcon?: React.ReactNode;\n  /** Custom className */\n  className?: string;\n  /** Apply glow effect on hover */\n  glow?: boolean;\n}\n\n// Base button classes\nconst baseClasses = [\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-lg text-sm font-medium\",\n  \"transition-all duration-300 ease-in-out\",\n  \"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-white/20 focus-visible:ring-offset-2\",\n  \"disabled:pointer-events-none disabled:opacity-50\",\n  \"relative overflow-hidden\",\n  \"backdrop-blur-xl border border-white/20\",\n  \"before:absolute before:inset-0 before:bg-gradient-to-r before:from-transparent before:via-white/10 before:to-transparent\",\n  \"before:translate-x-[-100%] before:transition-transform before:duration-700\",\n  \"hover:before:translate-x-[100%]\",\n  \"active:scale-[0.98]\",\n].join(\" \");\n\n// Variant classes\nconst variantClasses: Record<ButtonVariant, string> = {\n  primary: [\n    \"bg-gradient-to-r from-[var(--color-brand-500)] to-[var(--color-brand-700)]\",\n    \"text-white shadow-lg shadow-[var(--color-brand-500)]/25\",\n    \"hover:shadow-xl hover:shadow-[var(--color-brand-500)]/40\",\n    \"hover:from-[var(--color-brand-400)] hover:to-[var(--color-brand-600)]\",\n    \"cursor-pointer\",\n  ].join(\" \"),\n  glassSec: [\n    \"bg-gradient-to-r from-sky-200/10 to-sky-400/10\",\n    \"text-white border-sky-300/20\",\n    \"hover:from-sky-300/20 hover:to-sky-500/20\",\n    \"shadow-lg shadow-sky-300/20\",\n    \"cursor-pointer\",\n  ].join(\" \"),\n  glass: [\n    \"bg-gradient-to-r from-white/10 to-white/5\",\n    \"text-white border-white/30\",\n    \"hover:bg-gradient-to-r hover:from-white/20 hover:to-white/10\",\n    \"shadow-lg shadow-black/10\",\n    \"cursor-pointer\",\n  ].join(\" \"),\n  glassBrand: [\n    \"bg-gradient-to-r from-[var(--color-brand-500)]/20 to-[var(--color-brand-700)]/10 \",\n    \"text-white border-[var(--color-brand-400)]/30\",\n    \"hover:from-[var(--color-brand-500)]/30 hover:to-[var(--color-brand-700)]/20\",\n    \"shadow-lg shadow-[var(--color-brand-500)]/20\",\n    \"cursor-pointer\",\n  ].join(\" \"),\n  outline: [\n    \"bg-transparent border-2 border-white/40\",\n    \"text-white\",\n    \"hover:bg-white/10 hover:border-white/60\",\n    \"shadow-lg shadow-black/10\",\n    \"cursor-pointer\",\n  ].join(\" \"),\n  ghost: [\n    \"bg-transparent border-transparent\",\n    \"text-white\",\n    \"hover:bg-white/10 hover:border-white/20\",\n    \"cursor-pointer\",\n  ].join(\" \"),\n  dark: [\n    \"bg-gradient-to-r from-black/40 to-black/20\",\n    \"text-white border-white/20\",\n    \"hover:from-black/50 hover:to-black/30\",\n    \"shadow-lg shadow-black/20\",\n    \"cursor-pointer\",\n  ].join(\" \"),\n};\n\n// Size classes\nconst sizeClasses: Record<ButtonSize, string> = {\n  sm: \"h-6 px-3 text-xs\",\n  default: \"h-12 px-3 py-3\",\n  md: \"h-11 px-6 text-base\",\n  lg: \"h-12 px-8 text-lg\",\n  xl: \"h-14 px-10 text-xl\",\n  icon: \"h-10 w-10 p-0\",\n};\n\n// Glass effect classes\nconst glassClasses: Record<ButtonGlass, string> = {\n  none: \"\",\n  light: \"backdrop-blur-sm\",\n  medium: \"backdrop-blur-md\",\n  heavy: \"backdrop-blur-xl\",\n};\n\n// Loading spinner component\nconst LoadingSpinner: React.FC = () => (\n  <svg\n    className=\"animate-spin h-4 w-4\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n  >\n    <circle\n      className=\"opacity-25\"\n      cx=\"12\"\n      cy=\"12\"\n      r=\"10\"\n      stroke=\"currentColor\"\n      strokeWidth=\"4\"\n    />\n    <path\n      className=\"opacity-75\"\n      fill=\"currentColor\"\n      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n    />\n  </svg>\n);\n\n// Get button classes based on props\nconst getButtonClasses = (\n  variant: ButtonVariant = \"primary\",\n  size: ButtonSize = \"default\",\n  glass: ButtonGlass = \"medium\",\n  glow: boolean = false,\n  className?: string\n): string => {\n  return cn(\n    baseClasses,\n    variantClasses[variant],\n    sizeClasses[size],\n    glassClasses[glass],\n    glow && \"hover:shadow-2xl hover:shadow-current/20\",\n    className\n  );\n};\n\n// Forward ref for better component composition\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant = \"primary\",\n      size = \"default\",\n      glass = \"medium\",\n      children,\n      loading = false,\n      leftIcon,\n      rightIcon,\n      glow = false,\n      disabled,\n      ...props\n    },\n    ref\n  ) => {\n    const buttonClasses = getButtonClasses(\n      variant,\n      size,\n      glass,\n      glow,\n      className\n    );\n\n    return (\n      <button\n        className={cn(buttonClasses, \"\")}\n        ref={ref}\n        disabled={disabled || loading}\n        {...props}\n      >\n        {/* Left icon or loading spinner */}\n        {loading ? (\n          <LoadingSpinner />\n        ) : leftIcon ? (\n          <span className=\"flex-shrink-0\">{leftIcon}</span>\n        ) : null}\n\n        {/* Button text */}\n        <span className={cn(loading && \"opacity-70\")}>{children}</span>\n\n        {/* Right icon */}\n        {!loading && rightIcon && (\n          <span className=\"flex-shrink-0\">{rightIcon}</span>\n        )}\n\n        {/* Glassmorphism shine effect */}\n        <div className=\"absolute  inset-0 rounded-lg bg-gradient-to-r from-transparent via-white/5 to-transparent opacity-0 transition-opacity duration-300 group-hover:opacity-100 pointer-events-none\" />\n      </button>\n    );\n  }\n);\n\nButton.displayName = \"Button\";\n\n// Default export\nexport default Button;\n\n/* \nUsage Examples:\n\n// Basic usage\n<Button>Click me</Button>\n\n// With variants\n<Button variant=\"glass\" size=\"lg\">Glass Button</Button>\n<Button variant=\"glassBrand\" glow>Brand Glass</Button>\n\n// With icons\n<Button leftIcon={<YourIcon />}>With Left Icon</Button>\n<Button rightIcon={<ArrowIcon />}>With Right Icon</Button>\n\n// Loading state\n<Button loading>Loading...</Button>\n\n// Custom styling\n<Button \n  className=\"custom-class\" \n  variant=\"outline\"\n  size=\"md\"\n  glass=\"heavy\"\n>\n  Custom Button\n</Button>\n\n// All props example\n<Button\n  variant=\"glassBrand\"\n  size=\"lg\"\n  glass=\"medium\"\n  glow\n  loading={false}\n  leftIcon={<SomeIcon />}\n  rightIcon={<AnotherIcon />}\n  onClick={() => console.log('clicked')}\n  disabled={false}\n  className=\"my-custom-class\"\n>\n  Complete Example\n</Button>\n*/\n"],"names":[],"mappings":";;;;;AAAA;;;AAEA,gFAAgF;AAChF,MAAM,KAAK,CAAC,GAAG;IACb,OAAO,QAAQ,MAAM,CAAC,SAAS,IAAI,CAAC;AACtC;AAsCA,sBAAsB;AACtB,MAAM,cAAc;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD,CAAC,IAAI,CAAC;AAEP,kBAAkB;AAClB,MAAM,iBAAgD;IACpD,SAAS;QACP;QACA;QACA;QACA;QACA;KACD,CAAC,IAAI,CAAC;IACP,UAAU;QACR;QACA;QACA;QACA;QACA;KACD,CAAC,IAAI,CAAC;IACP,OAAO;QACL;QACA;QACA;QACA;QACA;KACD,CAAC,IAAI,CAAC;IACP,YAAY;QACV;QACA;QACA;QACA;QACA;KACD,CAAC,IAAI,CAAC;IACP,SAAS;QACP;QACA;QACA;QACA;QACA;KACD,CAAC,IAAI,CAAC;IACP,OAAO;QACL;QACA;QACA;QACA;KACD,CAAC,IAAI,CAAC;IACP,MAAM;QACJ;QACA;QACA;QACA;QACA;KACD,CAAC,IAAI,CAAC;AACT;AAEA,eAAe;AACf,MAAM,cAA0C;IAC9C,IAAI;IACJ,SAAS;IACT,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,MAAM;AACR;AAEA,uBAAuB;AACvB,MAAM,eAA4C;IAChD,MAAM;IACN,OAAO;IACP,QAAQ;IACR,OAAO;AACT;AAEA,4BAA4B;AAC5B,MAAM,iBAA2B,kBAC/B,8OAAC;QACC,WAAU;QACV,OAAM;QACN,MAAK;QACL,SAAQ;;0BAER,8OAAC;gBACC,WAAU;gBACV,IAAG;gBACH,IAAG;gBACH,GAAE;gBACF,QAAO;gBACP,aAAY;;;;;;0BAEd,8OAAC;gBACC,WAAU;gBACV,MAAK;gBACL,GAAE;;;;;;;;;;;;AAKR,oCAAoC;AACpC,MAAM,mBAAmB,CACvB,UAAyB,SAAS,EAClC,OAAmB,SAAS,EAC5B,QAAqB,QAAQ,EAC7B,OAAgB,KAAK,EACrB;IAEA,OAAO,GACL,aACA,cAAc,CAAC,QAAQ,EACvB,WAAW,CAAC,KAAK,EACjB,YAAY,CAAC,MAAM,EACnB,QAAQ,4CACR;AAEJ;AAGO,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAC7B,CACE,EACE,SAAS,EACT,UAAU,SAAS,EACnB,OAAO,SAAS,EAChB,QAAQ,QAAQ,EAChB,QAAQ,EACR,UAAU,KAAK,EACf,QAAQ,EACR,SAAS,EACT,OAAO,KAAK,EACZ,QAAQ,EACR,GAAG,OACJ,EACD;IAEA,MAAM,gBAAgB,iBACpB,SACA,MACA,OACA,MACA;IAGF,qBACE,8OAAC;QACC,WAAW,GAAG,eAAe;QAC7B,KAAK;QACL,UAAU,YAAY;QACrB,GAAG,KAAK;;YAGR,wBACC,8OAAC;;;;uBACC,yBACF,8OAAC;gBAAK,WAAU;0BAAiB;;;;;uBAC/B;0BAGJ,8OAAC;gBAAK,WAAW,GAAG,WAAW;0BAAgB;;;;;;YAG9C,CAAC,WAAW,2BACX,8OAAC;gBAAK,WAAU;0BAAiB;;;;;;0BAInC,8OAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB;AAGF,OAAO,WAAW,GAAG;uCAGN;CAEf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA","debugId":null}},
    {"offset": {"line": 318, "column": 3}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///home/md-alamin-haque/xyz/own/project-xyz-beta-main/src/components/logout/Logout.tsx"],"sourcesContent":["\"use client\";\n\nimport { useLogout } from \"@/hooks/admin/useLogout\";\nimport React from \"react\";\nimport Button, { ButtonProps } from \"../ui/Button\";\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\ninterface LogoutButtonProps extends Omit<ButtonProps, \"onClick\"> {}\n\nconst LogoutButton: React.FC<LogoutButtonProps> = (props) => {\n  const logout = useLogout();\n\n  return (\n    <Button onClick={logout} {...props}>\n      {props.children ?? \"Logout\"}\n    </Button>\n  );\n};\n\nexport default LogoutButton;\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AASA,MAAM,eAA4C,CAAC;IACjD,MAAM,SAAS,CAAA,GAAA,mIAAA,CAAA,YAAS,AAAD;IAEvB,qBACE,8OAAC,kIAAA,CAAA,UAAM;QAAC,SAAS;QAAS,GAAG,KAAK;kBAC/B,MAAM,QAAQ,IAAI;;;;;;AAGzB;uCAEe","debugId":null}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":["file:///home/md-alamin-haque/xyz/own/project-xyz-beta-main/src/components/home/Menu.tsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\nimport { cn } from \"@/utils/function/cn\";\nimport LogoutButton from \"../logout/Logout\";\nimport { useUser } from \"@/context/AuthContext\";\n\ninterface MenuProps {\n  text: string;\n  position?: \"left\" | \"center\" | \"right\";\n  fontSize?: \"title1\" | \"title2\" | \"title3\";\n  className?: string;\n}\n\nconst Menu: React.FC<MenuProps> = ({\n  text,\n  position = \"center\",\n  fontSize = \"title3\",\n  className,\n}) => {\n  const { user } = useUser();\n  return (\n    <div\n      className={cn(\n        position === \"left\" && \"text-left\",\n        position === \"center\" && \"text-center\",\n        position === \"right\" && \"text-right\",\n        \" cursor-pointer uppercase text-white \"\n      )}\n    >\n      <h2 className={cn(`text-${fontSize} my-2  ${className}`)}>{text}</h2>\n      <div className=\"glass\"></div>\n      {user && (\n        <div className=\"lg:m-8 mr-2 ml-2 mb-0 mt-4\">\n          <LogoutButton variant=\"glass\">Logout</LogoutButton>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Menu;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAaA,MAAM,OAA4B,CAAC,EACjC,IAAI,EACJ,WAAW,QAAQ,EACnB,WAAW,QAAQ,EACnB,SAAS,EACV;IACC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,UAAO,AAAD;IACvB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,8HAAA,CAAA,KAAE,AAAD,EACV,aAAa,UAAU,aACvB,aAAa,YAAY,eACzB,aAAa,WAAW,cACxB;;0BAGF,8OAAC;gBAAG,WAAW,CAAA,GAAA,8HAAA,CAAA,KAAE,AAAD,EAAE,CAAC,KAAK,EAAE,SAAS,OAAO,EAAE,WAAW;0BAAI;;;;;;0BAC3D,8OAAC;gBAAI,WAAU;;;;;;YACd,sBACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,sIAAA,CAAA,UAAY;oBAAC,SAAQ;8BAAQ;;;;;;;;;;;;;;;;;AAKxC;uCAEe","debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file:///home/md-alamin-haque/xyz/own/project-xyz-beta-main/src/components/form/InvoiceForm.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { invoiceSchema, type InvoiceFormData } from \"@/schemas/invoice\";\nimport Menu from \"../home/Menu\";\nimport Button from \"../ui/Button\";\n\ninterface InvoiceFormProps {\n  onSubmit: (data: InvoiceFormData) => void;\n}\n\nexport default function InvoiceForm({ onSubmit }: InvoiceFormProps) {\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [showError, setShowError] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm<InvoiceFormData>({\n    resolver: zodResolver(invoiceSchema),\n    defaultValues: {\n      issueDate: new Date().toISOString().split(\"T\")[0],\n      billToName: \"\",\n      productName: \"\",\n    },\n  });\n\n  const handleFormSubmit = async (data: InvoiceFormData) => {\n    try {\n      setIsGenerating(true);\n      setShowError(false);\n\n      // Simulate API call\n      await new Promise((resolve) => setTimeout(resolve, 2000));\n\n      onSubmit(data);\n      reset();\n    } catch (error) {\n      setShowError(true);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen main_gradient_bg  \">\n      <Menu text=\"ダミー請求書の作成\" position=\"left\" className=\"ml-6\" />\n      <div className=\"flex items-center mt-8 justify-center\">\n        <div className=\"w-full max-w-3xl\">\n          {/* Header */}\n\n          {/* Error Message */}\n          {showError && (\n            <div className=\"mb-6 p-3 bg-red-900/20 border border-red-500/30 rounded-lg\">\n              <p className=\"text-red-400 text-sm\">請求書の生成に失敗しました</p>\n            </div>\n          )}\n\n          {/* Form */}\n          <form onSubmit={handleSubmit(handleFormSubmit)} className=\"space-y-6\">\n            <div className=\"glass p-6\">\n              {/* Issue Date */}\n              <div className=\"mb-4\">\n                <label\n                  htmlFor=\"issueDate\"\n                  className=\"block text-white text-sm font-medium mb-2\"\n                >\n                  発行日\n                </label>\n                <input\n                  {...register(\"issueDate\")}\n                  type=\"date\"\n                  id=\"issueDate\"\n                  className=\"glass-input w-full px-4 py-3 text-white placeholder-gray-400\"\n                />\n                {errors.issueDate && (\n                  <p className=\"mt-1 text-red-400 text-sm\">\n                    {errors.issueDate.message}\n                  </p>\n                )}\n              </div>\n\n              {/* Bill To Name */}\n              <div className=\"mb-4\">\n                <label\n                  htmlFor=\"billToName\"\n                  className=\"block text-white text-sm font-medium mb-2\"\n                >\n                  請求先名\n                </label>\n                <input\n                  {...register(\"billToName\")}\n                  type=\"text\"\n                  id=\"billToName\"\n                  placeholder=\"クライアント名を入力\"\n                  className=\"glass-input w-full px-4 py-3 text-white placeholder-gray-400\"\n                />\n                {errors.billToName && (\n                  <p className=\"mt-1 text-red-400 text-sm\">\n                    {errors.billToName.message}\n                  </p>\n                )}\n              </div>\n\n              {/* Product Name */}\n              <div className=\"\">\n                <label\n                  htmlFor=\"productName\"\n                  className=\"block text-white text-sm font-medium mb-2\"\n                >\n                  品名\n                </label>\n                <input\n                  {...register(\"productName\")}\n                  type=\"text\"\n                  id=\"productName\"\n                  placeholder=\"商品名を入力\"\n                  className=\"glass-input w-full px-4 py-3 text-white placeholder-gray-400\"\n                />\n                {errors.productName && (\n                  <p className=\"mt-1 text-red-400 text-sm\">\n                    {errors.productName.message}\n                  </p>\n                )}\n              </div>\n            </div>\n\n            {/* Submit Button */}\n            <Button variant=\"glassBrand\" className=\"w-full\">\n              {isGenerating ? \"生成中...\" : \"PDFをダウンロード\"}\n            </Button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AAae,SAAS,YAAY,EAAE,QAAQ,EAAoB;IAChE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,EACJ,QAAQ,EACR,YAAY,EACZ,WAAW,EAAE,MAAM,EAAE,EACrB,KAAK,EACN,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAmB;QAC3B,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE,yHAAA,CAAA,gBAAa;QACnC,eAAe;YACb,WAAW,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;YACjD,YAAY;YACZ,aAAa;QACf;IACF;IAEA,MAAM,mBAAmB,OAAO;QAC9B,IAAI;YACF,gBAAgB;YAChB,aAAa;YAEb,oBAAoB;YACpB,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;YAEnD,SAAS;YACT;QACF,EAAE,OAAO,OAAO;YACd,aAAa;QACf,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,kIAAA,CAAA,UAAI;gBAAC,MAAK;gBAAY,UAAS;gBAAO,WAAU;;;;;;0BACjD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;wBAIZ,2BACC,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAE,WAAU;0CAAuB;;;;;;;;;;;sCAKxC,8OAAC;4BAAK,UAAU,aAAa;4BAAmB,WAAU;;8CACxD,8OAAC;oCAAI,WAAU;;sDAEb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDACC,SAAQ;oDACR,WAAU;8DACX;;;;;;8DAGD,8OAAC;oDACE,GAAG,SAAS,YAAY;oDACzB,MAAK;oDACL,IAAG;oDACH,WAAU;;;;;;gDAEX,OAAO,SAAS,kBACf,8OAAC;oDAAE,WAAU;8DACV,OAAO,SAAS,CAAC,OAAO;;;;;;;;;;;;sDAM/B,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDACC,SAAQ;oDACR,WAAU;8DACX;;;;;;8DAGD,8OAAC;oDACE,GAAG,SAAS,aAAa;oDAC1B,MAAK;oDACL,IAAG;oDACH,aAAY;oDACZ,WAAU;;;;;;gDAEX,OAAO,UAAU,kBAChB,8OAAC;oDAAE,WAAU;8DACV,OAAO,UAAU,CAAC,OAAO;;;;;;;;;;;;sDAMhC,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDACC,SAAQ;oDACR,WAAU;8DACX;;;;;;8DAGD,8OAAC;oDACE,GAAG,SAAS,cAAc;oDAC3B,MAAK;oDACL,IAAG;oDACH,aAAY;oDACZ,WAAU;;;;;;gDAEX,OAAO,WAAW,kBACjB,8OAAC;oDAAE,WAAU;8DACV,OAAO,WAAW,CAAC,OAAO;;;;;;;;;;;;;;;;;;8CAOnC,8OAAC,kIAAA,CAAA,UAAM;oCAAC,SAAQ;oCAAa,WAAU;8CACpC,eAAe,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOzC","debugId":null}},
    {"offset": {"line": 651, "column": 0}, "map": {"version":3,"sources":["file:///home/md-alamin-haque/xyz/own/project-xyz-beta-main/src/app/%28user%29/dummy-invoice/page.tsx"],"sourcesContent":["\"use client\";\n\nimport InvoiceForm from \"@/components/form/InvoiceForm\";\nimport type { InvoiceFormData } from \"@/schemas/invoice\";\nimport React from \"react\";\n\nexport default function InvoicePage() {\n  const handleInvoiceSubmit = (data: InvoiceFormData) => {\n    console.log(\"Invoice data submitted:\", data);\n\n    // Here you would typically:\n    // 1. Send data to your API\n    // 2. Generate PDF invoice\n    // 3. Redirect to success page or show success message\n\n    alert(\"請求書が正常に生成されました！\");\n  };\n\n  return <InvoiceForm onSubmit={handleInvoiceSubmit} />;\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAMe,SAAS;IACtB,MAAM,sBAAsB,CAAC;QAC3B,QAAQ,GAAG,CAAC,2BAA2B;QAEvC,4BAA4B;QAC5B,2BAA2B;QAC3B,0BAA0B;QAC1B,sDAAsD;QAEtD,MAAM;IACR;IAEA,qBAAO,8OAAC,yIAAA,CAAA,UAAW;QAAC,UAAU;;;;;;AAChC","debugId":null}}]
}