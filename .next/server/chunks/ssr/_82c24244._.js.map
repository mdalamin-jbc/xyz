{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/roushan-sheik/Projects/Office%20/project-xyz/30-june/xyz/src/components/admin/ui/Button.tsx"],"sourcesContent":["// Reusable Button Component\nconst Button: React.FC<{\n  variant?: \"primary\" | \"secondary\" | \"danger\";\n  leftIcon?: React.ReactNode;\n  className?: string;\n  disabled?: boolean;\n  children: React.ReactNode;\n  onClick?: () => void;\n  type?: \"button\" | \"submit\";\n}> = ({\n  variant = \"primary\",\n  leftIcon,\n  className = \"\",\n  disabled,\n  children,\n  onClick,\n  type = \"button\",\n}) => {\n  const baseClasses =\n    \"flex items-center gap-2 px-4 lg:py-3 py-2  rounded-lg font-medium transition-colors disabled:opacity-50\";\n\n  const variantClasses = {\n    primary: \"bg-blue-600 text-white hover:bg-blue-700\",\n    secondary: \"bg-gray-200 text-gray-700 hover:bg-gray-300\",\n    danger: \"bg-red-600 text-white hover:bg-red-700\",\n  };\n\n  return (\n    <button\n      type={type}\n      onClick={onClick}\n      disabled={disabled}\n      className={`${baseClasses} ${variantClasses[variant]} ${className}`}\n    >\n      {leftIcon}\n      {children}\n    </button>\n  );\n};\nexport default Button;\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;AAC5B,MAAM,SAQD,CAAC,EACJ,UAAU,SAAS,EACnB,QAAQ,EACR,YAAY,EAAE,EACd,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,OAAO,QAAQ,EAChB;IACC,MAAM,cACJ;IAEF,MAAM,iBAAiB;QACrB,SAAS;QACT,WAAW;QACX,QAAQ;IACV;IAEA,qBACE,8OAAC;QACC,MAAM;QACN,SAAS;QACT,UAAU;QACV,WAAW,GAAG,YAAY,CAAC,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW;;YAElE;YACA;;;;;;;AAGP;uCACe","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///home/roushan-sheik/Projects/Office%20/project-xyz/30-june/xyz/src/components/ui/Breadcrumbs.tsx"],"sourcesContent":["import React from \"react\";\nimport { ChevronRight, Home } from \"lucide-react\";\nimport Link from \"next/link\";\n\n// Breadcrumb types\nexport interface BreadcrumbItem {\n  label: string;\n  href?: string;\n  icon?: React.ReactNode;\n  isActive?: boolean;\n}\n\ninterface BreadcrumbsProps {\n  items: BreadcrumbItem[];\n  separator?: React.ReactNode;\n  className?: string;\n  showHome?: boolean;\n  homeLabel?: string;\n  homeHref?: string;\n}\n\n// Main Breadcrumbs Component\nconst Breadcrumbs: React.FC<BreadcrumbsProps> = ({\n  items,\n  separator = <ChevronRight className=\"w-4 h-4 text-gray-400\" />,\n  className = \"\",\n  showHome = true,\n  homeLabel = \"ホーム\",\n  homeHref = \"/\",\n}) => {\n  // Add home item if showHome is true\n  const allItems: BreadcrumbItem[] = showHome\n    ? [\n        {\n          label: homeLabel,\n          href: homeHref,\n          icon: <Home className=\"w-4 h-4\" />,\n        } as BreadcrumbItem,\n        ...items,\n      ]\n    : items;\n\n  return (\n    <nav\n      className={`flex items-center space-x-1 text-sm ${className}`}\n      aria-label=\"Breadcrumb\"\n    >\n      <ol className=\"flex items-center space-x-1\">\n        {allItems.map((item, index) => {\n          const isLast = index === allItems.length - 1;\n          const isActive = item.isActive || isLast;\n\n          return (\n            <li key={index} className=\"flex items-center\">\n              {index > 0 && (\n                <span className=\"mx-2 flex-shrink-0\">{separator}</span>\n              )}\n\n              {item.href && !isActive ? (\n                <Link href={item.href}>\n                  <p className=\"flex items-center  text-gray-600 hover:text-gray-900 transition-colors duration-200 px-1 py-1 rounded-md hover:bg-gray-100\">\n                    {item.icon}\n                    <span>{item.label}</span>\n                  </p>\n                </Link>\n              ) : (\n                <span\n                  className={`flex items-center gap-1 px-2 py-1 rounded-md ${\n                    isActive\n                      ? \"text-blue-600 bg-blue-50 font-medium\"\n                      : \"text-gray-500\"\n                  }`}\n                >\n                  {item.icon}\n                  <span>{item.label}</span>\n                </span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\nexport default Breadcrumbs;\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;;;;AAmBA,6BAA6B;AAC7B,MAAM,cAA0C,CAAC,EAC/C,KAAK,EACL,0BAAY,8OAAC,sNAAA,CAAA,eAAY;IAAC,WAAU;;;;;QAA0B,EAC9D,YAAY,EAAE,EACd,WAAW,IAAI,EACf,YAAY,KAAK,EACjB,WAAW,GAAG,EACf;IACC,oCAAoC;IACpC,MAAM,WAA6B,WAC/B;QACE;YACE,OAAO;YACP,MAAM;YACN,oBAAM,8OAAC,mMAAA,CAAA,OAAI;gBAAC,WAAU;;;;;;QACxB;WACG;KACJ,GACD;IAEJ,qBACE,8OAAC;QACC,WAAW,CAAC,oCAAoC,EAAE,WAAW;QAC7D,cAAW;kBAEX,cAAA,8OAAC;YAAG,WAAU;sBACX,SAAS,GAAG,CAAC,CAAC,MAAM;gBACnB,MAAM,SAAS,UAAU,SAAS,MAAM,GAAG;gBAC3C,MAAM,WAAW,KAAK,QAAQ,IAAI;gBAElC,qBACE,8OAAC;oBAAe,WAAU;;wBACvB,QAAQ,mBACP,8OAAC;4BAAK,WAAU;sCAAsB;;;;;;wBAGvC,KAAK,IAAI,IAAI,CAAC,yBACb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAM,KAAK,IAAI;sCACnB,cAAA,8OAAC;gCAAE,WAAU;;oCACV,KAAK,IAAI;kDACV,8OAAC;kDAAM,KAAK,KAAK;;;;;;;;;;;;;;;;iDAIrB,8OAAC;4BACC,WAAW,CAAC,6CAA6C,EACvD,WACI,yCACA,iBACJ;;gCAED,KAAK,IAAI;8CACV,8OAAC;8CAAM,KAAK,KAAK;;;;;;;;;;;;;mBArBd;;;;;YA0Bb;;;;;;;;;;;AAIR;uCACe","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///home/roushan-sheik/Projects/Office%20/project-xyz/30-june/xyz/src/app/%28admin%29/admin/%28routes%29/chat-history/page.tsx"],"sourcesContent":["\"use client\";\nimport Button from \"@/components/admin/ui/Button\";\nimport Breadcrumbs from \"@/components/ui/Breadcrumbs\";\nimport { adminBreadcrumbs } from \"@/constants/route-breadcrumbs\";\nimport React, { useEffect, useState, ChangeEvent, FormEvent, FC } from \"react\";\n\ninterface ChatRoom {\n  id: string | number;\n  customer_name: string;\n  last_message_at: string;\n}\n\ninterface ChatMessage {\n  id: string | number;\n  content: string;\n  created_at: string;\n  is_admin: boolean;\n}\n\nconst MainComponent: FC = () => {\n  const [chatRooms, setChatRooms] = useState<ChatRoom[]>([]);\n  const [selectedRoom, setSelectedRoom] = useState<ChatRoom | null>(null);\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n\n  useEffect(() => {\n    fetchChatRooms();\n  }, []);\n\n  useEffect(() => {\n    if (selectedRoom) {\n      fetchMessages(selectedRoom.id);\n    }\n  }, [selectedRoom]);\n\n  const fetchChatRooms = async () => {\n    try {\n      const response = await fetch(\"/api/admin/chat-rooms\");\n      if (!response.ok) throw new Error(\"チャットルームの取得に失敗しました\");\n      const data = await response.json();\n      setChatRooms(data.rooms || []);\n    } catch (err: any) {\n      console.error(err);\n      setError(err.message || \"チャットルーム読み込みエラー\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchMessages = async (roomId: string | number) => {\n    try {\n      const response = await fetch(`/api/admin/chat-messages/${roomId}`);\n      if (!response.ok) throw new Error(\"メッセージの取得に失敗しました\");\n      const data = await response.json();\n      setMessages(data.messages || []);\n    } catch (err: any) {\n      console.error(err);\n      setError(err.message || \"メッセージ読み込みエラー\");\n    }\n  };\n\n  const handleSearch = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const filtered = chatRooms.filter(\n      (room) =>\n        room.customer_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        room.id.toString().includes(searchTerm)\n    );\n    setChatRooms(filtered);\n  };\n\n  return (\n    <div className=\"flex min-h-screen flex-col bg-white lg:p-4\">\n      <div className=\"mb-8\">\n        <Breadcrumbs\n          items={[{ label: \"チャット履歴\", href: \"/admin/chat-history\" }]}\n          homeHref=\"/admin\"\n        />\n      </div>\n      <header className=\"border-b border-gray-200 bg-white px-4 py-3 md:px-6\">\n        <h1 className=\"text-xl font-medium text-gray-800 md:text-2xl\">\n          チャット履歴管理\n        </h1>\n      </header>\n\n      <main className=\"flex flex-col md:flex-row flex-1 h-[calc(100vh-60px)]\">\n        {/* Sidebar */}\n        <div className=\"w-full md:w-1/3 border-b md:border-b-0 md:border-r border-gray-200\">\n          <div className=\"p-4\">\n            <form\n              onSubmit={handleSearch}\n              className=\"flex flex-col gap-2 sm:flex-row\"\n            >\n              <input\n                type=\"text\"\n                value={searchTerm}\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                  setSearchTerm(e.target.value)\n                }\n                placeholder=\"ユーザー名、ルームIDで検索...\"\n                className=\"rounded-lg border border-gray-300 px-4 py-2 w-full\"\n              />\n              <Button type=\"submit\" className=\"w-full sm:w-auto\">\n                検索\n              </Button>\n            </form>\n          </div>\n\n          <div className=\"h-[300px] md:h-full overflow-y-auto\">\n            {loading ? (\n              <div className=\"flex justify-center py-12\">\n                <div className=\"text-gray-600\">読み込み中...</div>\n              </div>\n            ) : (\n              <div className=\"space-y-1 p-2\">\n                {chatRooms.map((room) => (\n                  <button\n                    key={room.id}\n                    onClick={() => setSelectedRoom(room)}\n                    className={`w-full rounded-lg p-3 text-left transition-colors ${\n                      selectedRoom?.id === room.id\n                        ? \"bg-[#357AFF] text-white\"\n                        : \"hover:bg-gray-100\"\n                    }`}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"font-medium\">{room.customer_name}</span>\n                      <span className=\"text-sm opacity-80\">\n                        {new Date(room.last_message_at).toLocaleDateString(\n                          \"ja-JP\"\n                        )}\n                      </span>\n                    </div>\n                    <p className=\"mt-1 text-sm opacity-80\">ID: {room.id}</p>\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Chat Panel */}\n        <div className=\"flex-1\">\n          {selectedRoom ? (\n            <div className=\"flex h-full flex-col\">\n              <div className=\"border-b border-gray-200 p-4\">\n                <h2 className=\"text-lg font-medium text-gray-800\">\n                  {selectedRoom.customer_name} とのチャット\n                </h2>\n                <p className=\"text-sm text-gray-600\">\n                  ルームID: {selectedRoom.id}\n                </p>\n              </div>\n              <div className=\"flex-1 overflow-y-auto p-4 bg-gray-50\">\n                {messages.map((message) => (\n                  <div\n                    key={message.id}\n                    className={`mb-4 flex ${\n                      message.is_admin ? \"justify-end\" : \"justify-start\"\n                    }`}\n                  >\n                    <div\n                      className={`max-w-[80%] rounded-lg p-3 text-sm ${\n                        message.is_admin\n                          ? \"bg-[#357AFF] text-white\"\n                          : \"bg-white border border-gray-200\"\n                      }`}\n                    >\n                      <p>{message.content}</p>\n                      <p className=\"mt-1 text-right text-xs opacity-60\">\n                        {new Date(message.created_at).toLocaleString(\"ja-JP\")}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ) : (\n            <div className=\"flex h-full items-center justify-center text-center text-gray-500 p-6\">\n              左側のリストからチャットルームを選択してください\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default MainComponent;\n"],"names":[],"mappings":"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","debugId":null}}]
}